h1. Dobro

h2. Installation

First things first, get the gem in your @Gemfile@:

<pre><code>gem 'dobro', '~> 0.1.0'</code></pre>

Then, decide where you want it amongst your routes:

<pre><code># in your config/routes.rb
dobro_for :articles, :pages, :users</code></pre>

If you want a central dobro page (which defaults to the index page for the first resource that you're using with Dobro), just point a path to @dobro/application#index@:

<pre><code># in your config/routes.rb
match '/dobro' => 'dobro/application#index'</code></pre>

And finally, make sure you add an @identifier@ method to the models you've marked as Dobro resources. This may be the name, email address, or title. Best to make it something unique.

<pre><code>def identifier
  name
end</code></pre>

Bundle and restart your server, and you're good to go. If you've provided a dobro index page (as covered above), then you can head straight to "http://localhost:3000/dobro":http://localhost:3000/dobro.

Before you get too carried away though, you'll almost certainly want to edit the views so the forms have only the fields you'd like. Keep reading for details on that.

h2. Usage

If you'd like to customise the views, just put your versions in @app/views/dobro@, broken down by resources. For example, a custom edit view for users would end up in @app/views/dobro/users/edit.html.erb@.

The standard set of views for Dobro includes:

* index
* show
* new
* edit
* delete

Generally it's not recommended you edit those though - best to stick to the partials:

* _form (used by both new and edit views)
* _show (used by the show view)

And perhaps you want to add custom controllers into the mix? That's easy too. For the relevant resources, just give them their own @dobro_for@ call, and specify the custom controller:

<pre><code>dobro_for :pages, :controller => 'pages'</code></pre>

You can also add additional routes just like a standard @resources@ call:

<pre><code>dobro_for :pages, :controller => 'pages' do
  member { put :approve }
end</code></pre>

h2. Compatibility

Developed for Rails 3.1 and Ruby 1.9. It will work on other Rubies, but not older versions of Rails.

h2. Developing

Contributions are very much welcome - but keep in mind the following:

* Keep patches in a separate branch
* Don't mess with the version or history file. We'll take care of that when the patch is merged in.
* Write tests - look at the existing tests (particularly in @spec/acceptance@) for examples and guidance.

h2. Credits

Copyright (c) 2011 "Hyper Tiny":http://hypertiny.ie. The bulk of the work has been done by "Brian Flanagan":http://www.brianflanagan.org/, "Paul Campbell":http://www.pabcas.com/ and "Pat Allan":http://freelancing-gods.com/, and the code is released under the open MIT Licence.
